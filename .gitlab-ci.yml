stages:
  - test
  - deploy
  - pages

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  
.prepare:
  stage: .prepare
  image: php:latest
  cache:
    paths:
      - vendor/
  before_script:
    - apt-get update -yqq
    - apt-get install -yqq git libcurl4-openssl-dev libzip-dev graphviz
    - docker-php-ext-install curl zip
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    - php --version
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install
    - php composer.phar --version

test:
  stage: test
  extends: .prepare
  script:
    - php composer.phar fix-style
    - php composer.phar check-style
    - php composer.phar security
    - vendor/bin/phpunit --configuration phpunit.xml --coverage-text --colors=never

deploy:
  stage: deploy
  extends: .prepare
  only:
    refs:
      - master
  variables:
    BOM_SERVER: "$BOM_SERVER"
    BOM_KEY: "$BOM_KEY"
    BOM_PROJECT: "$BOM_PROJECT"
  script:
    - php composer.phar make-bom --exclude-dev
    - curl -X "POST" "$BOM_SERVER" -H "Content-Type:multipart/form-data" -H "X-Api-Key:$BOM_KEY" -F "project=$BOM_PROJECT" -F "bom=@bom.xml"

pages:
  stage: pages
  extends: .prepare
  only:
    refs:
      - master
  script:
    - mkdir public
    - wget https://phpdoc.org/phpDocumentor.phar
    - chmod +x phpDocumentor.phar
    - php phpDocumentor.phar --visibility=public --setting=graphs.enabled=true -d src/ -t public/
  artifacts:
    paths:
    - public
  only:
  - master